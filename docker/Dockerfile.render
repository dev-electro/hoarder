# Start from the base build stage
FROM node:22-alpine AS base

WORKDIR /app
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# Install dependencies
RUN npm install -g corepack@0.31.0 && corepack enable
RUN apk add --no-cache libc6-compat make g++ py3-pip linux-headers

COPY . .
ENV NEXT_TELEMETRY_DISABLED 1
ENV PUPPETEER_SKIP_DOWNLOAD true
RUN pnpm install --frozen-lockfile

# Build the web app
RUN (cd apps/web && pnpm exec next build --experimental-build-mode compile)

# Build db migrations
RUN cd packages/db && \
    pnpm dlx @vercel/ncc build migrate.ts -o /db_migrations && \
    cp -R drizzle /db_migrations

# Create production stage
FROM node:22-alpine

WORKDIR /app
ENV PORT 3000
ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

# Copy built application
COPY --from=base /app/apps/web/.next/standalone ./
COPY --from=base /app/apps/web/public ./apps/web/public
COPY --from=base /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=base /db_migrations /db_migrations

EXPOSE 3000

# Start the application
CMD ["node", "server.js"]
